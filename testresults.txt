When run in compiled mode - aggregation by global region, region, subregion with sum (amount) runs about 700ms,
while Postgresql on the same machine does "SELECT globalregion, region,subregion, SUM (amount) FROM veeam_test GROUP BY globalregion, region, subregion;" in about 190ms, surprisingly, table with indexes runs the query about 5ms slower.
But in any case, difference is roughly 3.5x, which is huge.

Ok, by switching to Tuples and Map (from HashMap) we got the time down to 480ms - still 2.5x slower than postgresql

Current theory after running some profiles - GC takes A LOT of time, so we need to optimize csv conversion to the internal 
column format.


Test results on 300K line file in ghci -- proper Column based wins by a huge margin.

*SSCSV G> aggregateSimple pfl -- via generalized list comprehensions
[[QString "AMER",QDouble 3.04417197e8],[QString "APAC",QDouble 5.9799585e7],[QString "EMEA",QDouble 5.06634006e8]]
(1.09 secs, 254,387,872 bytes)
*SSCSV G> vfold (+) (Map.fromList []) reg am -- via COLUMNS and "!" ifold in Vector: 3x speed, almost 2x less memory
fromList [("AMER",3.04417197e8),("EMEA",5.06634006e8),("APAC",5.9799585e7)]
(0.35 secs, 148,659,648 bytes)
*SSCSV G> pfold (+) (Map.fromList []) reg am -- via COLUMNS and naive fold in Vector - faster than list comprehensions, but 2x memory
fromList [("AMER",3.04417197e8),("EMEA",5.06634006e8),("APAC",5.9799585e7)]
(1.02 secs, 525,248,512 bytes)
*SSCSV G> processAggr1' 14 9 pf -- via vector based list comprehensions, so row based - faster than list and naive column, but more memory still
fromList [(QString "dummy",QDouble 0.0),(QString "AMER",QDouble 3.04417197e8),(QString "EMEA",QDouble 5.06634006e8),(QString "APAC",QDouble 5.9799585e7)]
(0.85 secs, 276,236,384 bytes)


-- With aggregation by larger fields, difference becomes even more drastic with Column based ifold Vector being the fastest and the most memory efficient

*SSCSV G> vfold2 (+) (Map.fromList []) reg subreg am -- Column based vector
fromList [(("EMEA","EMEA-India"),2950534.0),(("AMER","MCA"),1.0249151e7),(("EMEA","EMEA-Eastern Europe"),2.0867508e7),(("EMEA","EMEA-Italy"),2.7470064e7),(("APAC","NZ & Islands"),6324300.0),(("AMER","USA"),2.48060945e8),(("EMEA","EMEA-Turkey"),1.1631087e7),(("EMEA","EMEA-Nordics"),3.8846345e7),(("AMER","Brazil"),3121278.0),(("EMEA","EMEA-Russia + CIS"),2.7853994e7),(("EMEA","EMEA-Benelux"),5.0740386e7),(("EMEA","EMEA-Africa South"),1.2183805e7),(("EMEA","EMEA-Mediterranean"),7335029.0),(("EMEA","EMEA-France/North Africa"),6.5888538e7),(("AMER","Canada"),2.6871789e7),(("APAC","Australia"),2.9342182e7),(("EMEA","EMEA-UK/Irl"),6.4724391e7),(("APAC","China"),2192754.0),(("AMER","USA Federal"),1.3049355e7),(("EMEA","EMEA-Iberia"),1.1359473e7),(("EMEA","EMEA-Switzerland"),2.6646665e7),(("EMEA","EMEA-Austria"),1.1734579e7),(("AMER","Mexico"),3064679.0),(("EMEA","EMEA-Middle East"),1.852809e7),(("APAC","Japan/Korea"),2015614.0),(("APAC","Rest of Asia"),1.9924735e7),(("EMEA","EMEA-Germany"),1.07873518e8)]
(0.55 secs, 216,875,656 bytes)
*SSCSV G> V.foldr' (\ x acc -> processAggrM2 14 5 9 acc x) (Map.fromList [] :: Map.Map [QValue] QValue) pf -- vector based rows
fromList [([QString "APAC",QString "Rest of Asia"],QDouble 1.9924735e7),([QString "EMEA",QString "EMEA-Nordics"],QDouble 3.8846345e7),([QString "EMEA",QString "EMEA-Benelux"],QDouble 5.0740386e7),([QString "APAC",QString "China"],QDouble 2192754.0),([QString "EMEA",QString "EMEA-UK/Irl"],QDouble 6.4724391e7),([QString "EMEA",QString "EMEA-India"],QDouble 2950534.0),([QString "AMER",QString "Mexico"],QDouble 3064679.0),([QString "EMEA",QString "EMEA-Africa South"],QDouble 1.2183805e7),([QString "EMEA",QString "EMEA-Switzerland"],QDouble 2.6646665e7),([QString "EMEA",QString "EMEA-Russia + CIS"],QDouble 2.7853994e7),([QString "APAC",QString "Australia"],QDouble 2.9342182e7),([QString "EMEA",QString "EMEA-Middle East"],QDouble 1.852809e7),([QString "APAC",QString "Japan/Korea"],QDouble 2015614.0),([QString "EMEA",QString "EMEA-Eastern Europe"],QDouble 2.0867508e7),([QString "EMEA",QString "EMEA-Italy"],QDouble 2.7470064e7),([QString "APAC",QString "NZ & Islands"],QDouble 6324300.0),([QString "AMER",QString "USA"],QDouble 2.48060945e8),([QString "AMER",QString "Brazil"],QDouble 3121278.0),([QString "EMEA",QString "EMEA-Austria"],QDouble 1.1734579e7),([QString "EMEA",QString "EMEA-Mediterranean"],QDouble 7335029.0),([QString "AMER",QString "Canada"],QDouble 2.6871789e7),([QString "EMEA",QString "EMEA-Turkey"],QDouble 1.1631087e7),([QString "EMEA",QString "EMEA-Iberia"],QDouble 1.1359473e7),([QString "AMER",QString "MCA"],QDouble 1.0249151e7),([QString "EMEA",QString "EMEA-Germany"],QDouble 1.07873518e8),([QString "EMEA",QString "EMEA-France/North Africa"],QDouble 6.5888538e7),([QString "AMER",QString "USA Federal"],QDouble 1.3049355e7)]
(1.67 secs, 518,254,824 bytes)
*SSCSV G> aggregateData pfl -- list comprehension
[[QString "AMER",QString "Brazil",QDouble 3121278.0],[QString "AMER",QString "Canada",QDouble 2.6871789e7],[QString "AMER",QString "MCA",QDouble 1.0249151e7],[QString "AMER",QString "Mexico",QDouble 3064679.0],[QString "AMER",QString "USA",QDouble 2.48060945e8],[QString "AMER",QString "USA Federal",QDouble 1.3049355e7],[QString "APAC",QString "Australia",QDouble 2.9342182e7],[QString "APAC",QString "China",QDouble 2192754.0],[QString "APAC",QString "Japan/Korea",QDouble 2015614.0],[QString "APAC",QString "NZ & Islands",QDouble 6324300.0],[QString "APAC",QString "Rest of Asia",QDouble 1.9924735e7],[QString "EMEA",QString "EMEA-Africa South",QDouble 1.2183805e7],[QString "EMEA",QString "EMEA-Austria",QDouble 1.1734579e7],[QString "EMEA",QString "EMEA-Benelux",QDouble 5.0740386e7],[QString "EMEA",QString "EMEA-Eastern Europe",QDouble 2.0867508e7],[QString "EMEA",QString "EMEA-France/North Africa",QDouble 6.5888538e7],[QString "EMEA",QString "EMEA-Germany",QDouble 1.07873518e8],[QString "EMEA",QString "EMEA-Iberia",QDouble 1.1359473e7],[QString "EMEA",QString "EMEA-India",QDouble 2950534.0],[QString "EMEA",QString "EMEA-Italy",QDouble 2.7470064e7],[QString "EMEA",QString "EMEA-Mediterranean",QDouble 7335029.0],[QString "EMEA",QString "EMEA-Middle East",QDouble 1.852809e7],[QString "EMEA",QString "EMEA-Nordics",QDouble 3.8846345e7],[QString "EMEA",QString "EMEA-Russia + CIS",QDouble 2.7853994e7],[QString "EMEA",QString "EMEA-Switzerland",QDouble 2.6646665e7],[QString "EMEA",QString "EMEA-Turkey",QDouble 1.1631087e7],[QString "EMEA",QString "EMEA-UK/Irl",QDouble 6.4724391e7]]
(4.57 secs, 1,501,571,776 bytes)

